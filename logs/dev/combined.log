{"level":"error","message":"Uncaught Exception:","meta":"ValidationException: Product Validation Error\n    at ProductValidator.validateProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\validators\\product.validation.js:63:13)\n    at ProductService.createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\services\\product.service.js:9:22)\n    at createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\controllers\\product.controller.js:6:41)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:47:7\n    at verifyToken (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:32:5)\n    at verifyStaff (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:39:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"error","message":"Uncaught Exception:","meta":"ValidationException: Product Validation Error\n    at ProductValidator.validateProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\validators\\product.validation.js:63:13)\n    at ProductService.createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\services\\product.service.js:9:22)\n    at createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\controllers\\product.controller.js:6:41)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:47:7\n    at verifyToken (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:32:5)\n    at verifyStaff (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:39:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"error","message":"Uncaught Exception:","meta":"ValidationException: Product Validation Error\n    at ProductValidator.validateProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\validators\\product.validation.js:63:13)\n    at ProductService.createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\services\\product.service.js:9:22)\n    at createProduct (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\controllers\\product.controller.js:6:41)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:47:7\n    at verifyToken (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:32:5)\n    at verifyStaff (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\src\\middleware\\auth.verifiyToken.js:39:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"E11000 duplicate key error collection: AgriTally.transactions index: name_1 dup key: { name: \"Sale\" }","meta":"MongoServerError: E11000 duplicate key error collection: AgriTally.transactions index: name_1 dup key: { name: \"Sale\" }\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\operations\\insert.js:50:33\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:331:21\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\sdam\\server.js:209:17\n    at handleOperationResult (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\sdam\\server.js:337:20)\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:206:9)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Transaction validation failed: name: Path `name` is required.","meta":"ValidationError: Transaction validation failed: name: Path `name` is required.\n    at Document.invalidate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"error","message":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"error","message":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"error","message":"Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{}\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '65267b62fc6c5d8e581f2d4c' }\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '65267b62fc6c5d8e581f2d4c' }\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"65267b62fc6c5d8e581f2d4\" (type string) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"65267b62fc6c5d8e581f2d4\" (type string) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:356:32)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:11:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'section' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'section' of 'filter' as it is undefined.\n    at buildQuery (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/utils/queryFilter.js:2:13)\n    at TransactionService.all (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:24:19)\n    at showAll (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:14:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"count is not defined","meta":"ReferenceError: count is not defined\n    at TransactionService.all (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:29:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async showAll (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:14:34)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"count is not defined","meta":"ReferenceError: count is not defined\n    at TransactionService.all (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:32:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async showAll (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:14:34)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '65267bbed1cab49f3232be3c' }\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '65267bbed1cab49f3232be3c' }\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOneAndDelete (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:3491:8)\n    at model.Query._findOneAndRemove (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:3714:15)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '65267b62fc6c5d8e581f2d4c' }\" (type Object) at path \"_id\" for model \"Transaction\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '65267b62fc6c5d8e581f2d4c' }\" (type Object) at path \"_id\" for model \"Transaction\"\n    at ObjectId.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOneAndUpdate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:3291:8)\n    at model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async TransactionRepository.updateOne (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:26:27)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `user` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `user` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.Query._find (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2307:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:11)\n    at async TransactionRepository.getAll (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:21:21)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Transaction validation failed: productId: Path `productId` is required.","meta":"ValidationError: Transaction validation failed: productId: Path `productId` is required.\n    at Document.invalidate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Transaction validation failed: productId: Path `productId` is required.","meta":"ValidationError: Transaction validation failed: productId: Path `productId` is required.\n    at Document.invalidate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Path collision at cartId.productId remaining portion productId","meta":"MongoServerError: Path collision at cartId.productId remaining portion productId\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:766:22)\n    at Socket.emit (node:events:514:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Path collision at cartId.cartItems.productId remaining portion cartItems.productId","meta":"MongoServerError: Path collision at cartId.cartItems.productId remaining portion cartItems.productId\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:766:22)\n    at Socket.emit (node:events:514:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `orderId.orderId` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `orderId.orderId` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.Query._find (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2307:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `orderId.cartId.` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `orderId.cartId.` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.Query._find (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2307:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `orderId.cartId.productId` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `orderId.cartId.productId` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.Query._find (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2307:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"utils.populate: invalid path. Expected string. Got typeof `object`","meta":"TypeError: utils.populate: invalid path. Expected string. Got typeof `object`\n    at Object.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:564:11)\n    at _populateObj (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:608:28)\n    at Object.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:567:10)\n    at _populateObj (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:608:28)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:567:10)\n    at Query.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4766:30)\n    at TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:12:6)\n    at TransactionService.one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:36:53)\n    at one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:21:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"utils.populate: invalid path. Expected string. Got typeof `object`","meta":"TypeError: utils.populate: invalid path. Expected string. Got typeof `object`\n    at Object.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:564:11)\n    at _populateObj (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:608:28)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\utils.js:567:10)\n    at Query.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4766:30)\n    at model.Query.autopopulateHandler (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose-autopopulate\\index.js:62:16)\n    at model.Query.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose-autopopulate\\index.js:77:67)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:97:35)\n    at Kareem.execPre (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:122:8)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4505:28\n    at new Promise (<anonymous>)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Path collision at cartId","meta":"MongoServerError: Path collision at cartId\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:766:22)\n    at Socket.emit (node:events:514:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Path collision at cartId.cartItems remaining portion cartItems","meta":"MongoServerError: Path collision at cartId.cartItems remaining portion cartItems\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:766:22)\n    at Socket.emit (node:events:514:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Transaction.findById(...).populate(...).execPopulate is not a function","meta":"TypeError: Transaction.findById(...).populate(...).execPopulate is not a function\n    at TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:22:8)\n    at TransactionService.one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:36:53)\n    at one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:21:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Transaction.findById(...).populate(...).execPopulate is not a function","meta":"TypeError: Transaction.findById(...).populate(...).execPopulate is not a function\n    at TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:22:8)\n    at TransactionService.one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:36:53)\n    at one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:21:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"{(intermediate value)}.select is not a function","meta":"TypeError: {(intermediate value)}.select is not a function\n    at TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:17:8)\n    at TransactionService.one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:36:53)\n    at one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:21:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"{(intermediate value)}.select is not a function","meta":"TypeError: {(intermediate value)}.select is not a function\n    at TransactionRepository.findById (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/data/repository/transaction.repository.js:17:8)\n    at TransactionService.one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/services/transaction.service.js:36:53)\n    at one (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/controllers/transaction.controller.js:21:59)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Admin/PROJECT/agriTally-backend/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Path collision at cartId.cartItems remaining portion cartItems","meta":"MongoServerError: Path collision at cartId.cartItems remaining portion cartItems\n    at Connection.onMessage (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:514:28)\n    at processIncomingData (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:766:22)\n    at Socket.emit (node:events:514:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `cartId` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `cartId` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:4434:24)\n    at model.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose-autopopulate\\index.js:112:19)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:268:35)\n    at Kareem.execPost (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:296:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `cartId` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `cartId` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\document.js:4434:24)\n    at model.<anonymous> (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose-autopopulate\\index.js:112:19)\n    at next (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:268:35)\n    at Kareem.execPost (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\kareem\\index.js:296:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot populate path `orderId.-user` because it is not in your schema. Set the `strictPopulate` option to false to override.","meta":"StrictPopulateError: Cannot populate path `orderId.-user` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:49:12)\n    at populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4325:21)\n    at _populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4285:5)\n    at C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4257:5\n    at new Promise (<anonymous>)\n    at Function.populate (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\model.js:4256:10)\n    at model.Query._find (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:2307:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async model.Query.exec (C:\\Users\\Admin\\PROJECT\\agriTally-backend\\node_modules\\mongoose\\lib\\query.js:4419:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{}}
{"level":"info","message":"Server is running on port 3000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{}}
{"level":"info","message":"Server is running on port 3000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{}}
{"level":"info","message":"Server is running on port 3000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"bcryptHelper is not defined","meta":"ReferenceError: bcryptHelper is not defined\n    at AdminRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:6:28)\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:13:47)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"bcryptHelper is not defined","meta":"ReferenceError: bcryptHelper is not defined\n    at AdminRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:6:28)\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:13:47)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"bcryptHelper is not defined","meta":"ReferenceError: bcryptHelper is not defined\n    at AdminRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:6:28)\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:13:47)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"bcryptHelper is not defined","meta":"ReferenceError: bcryptHelper is not defined\n    at AdminRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:6:28)\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:13:47)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"expiresIn is not defined","meta":"ReferenceError: expiresIn is not defined\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:28:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"generateJWTToken is not defined","meta":"ReferenceError: generateJWTToken is not defined\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:15:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"bcryptHelper is not defined","meta":"ReferenceError: bcryptHelper is not defined\n    at UserRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/user.repository.js:6:28)\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:15:45)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"expiresIn is not defined","meta":"ReferenceError: expiresIn is not defined\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:30:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"message":"Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-12917n-shard-0","stale":false,"type":"ReplicaSetNoPrimary"}}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":8000,"codeName":"AtlasError","connectionGeneration":0,"ok":0}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":8000,"codeName":"AtlasError","connectionGeneration":0,"ok":0}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"\"expiresIn\" should be a number of seconds or string representing a timespan","meta":"Error: \"expiresIn\" should be a number of seconds or string representing a timespan\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:50:15\n    at Array.forEach (<anonymous>)\n    at validate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:41:6)\n    at validateOptions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:56:10)\n    at module.exports [as sign] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:165:5)\n    at jwtService.generateAccessToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/lib/jwt.service.js:19:16)\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:17:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"\"expiresIn\" should be a number of seconds or string representing a timespan","meta":"Error: \"expiresIn\" should be a number of seconds or string representing a timespan\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:50:15\n    at Array.forEach (<anonymous>)\n    at validate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:41:6)\n    at validateOptions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:56:10)\n    at module.exports [as sign] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:165:5)\n    at jwtService.generateAccessToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/lib/jwt.service.js:19:16)\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:17:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"error","message":"\"expiresIn\" should be a number of seconds or string representing a timespan","meta":"Error: \"expiresIn\" should be a number of seconds or string representing a timespan\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:50:15\n    at Array.forEach (<anonymous>)\n    at validate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:41:6)\n    at validateOptions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:56:10)\n    at module.exports [as sign] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:165:5)\n    at jwtService.generateAccessToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/lib/jwt.service.js:19:16)\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:17:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"error","message":"\"expiresIn\" should be a number of seconds or string representing a timespan","meta":"Error: \"expiresIn\" should be a number of seconds or string representing a timespan\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:50:15\n    at Array.forEach (<anonymous>)\n    at validate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:41:6)\n    at validateOptions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:56:10)\n    at module.exports [as sign] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\sign.js:165:5)\n    at jwtService.generateAccessToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/lib/jwt.service.js:19:16)\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:17:36)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"token is not defined","meta":"ReferenceError: token is not defined\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:20:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"createAdminRequestValidator is not a function","meta":"TypeError: createAdminRequestValidator is not a function\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:9:5)\n    at register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:50)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:346:12)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Admin validation failed: email: Path `email` is required.","meta":"ValidationError: Admin validation failed: email: Path `email` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ECONNREFUSED","hostname":"_mongodb._tcp.clusteragbe01.7nzef0r.mongodb.net","syscall":"querySrv"}}
{"level":"error","message":"Operation `admins.findOne()` buffering timed out after 10000ms","meta":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:185:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"error","message":"Operation `admins.findOne()` buffering timed out after 10000ms","meta":"MongooseError: Operation `admins.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:185:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"User validation failed: email: Path `email` is required.","meta":"ValidationError: User validation failed: email: Path `email` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"jwtService.compa is not a function","meta":"TypeError: jwtService.compa is not a function\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:40:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"jwt malformed","meta":"JsonWebTokenError: jwt malformed\n    at module.exports [as verify] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\jsonwebtoken\\verify.js:70:17)\n    at jwtService.decodeToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/lib/jwt.service.js:22:16)\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:40:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"jwtService is not defined","meta":"ReferenceError: jwtService is not defined\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:44:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"error","message":"jwtService is not defined","meta":"ReferenceError: jwtService is not defined\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:44:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"orderValidator is not defined","meta":"ReferenceError: orderValidator is not defined\n    at OrderService.createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/order.service.js:10:5)\n    at createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/order.controller.js:7:50)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"orderValidator is not defined","meta":"ReferenceError: orderValidator is not defined\n    at OrderService.createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/order.service.js:10:5)\n    at createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/order.controller.js:7:50)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"error","message":"orderValidator is not defined","meta":"ReferenceError: orderValidator is not defined\n    at OrderService.createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/order.service.js:10:5)\n    at createOrder (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/order.controller.js:7:50)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"CartService.getAll is not a function","meta":"TypeError: CartService.getAll is not a function\n    at getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:27:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:63:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyManager (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:56:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"error","message":"CartService.addToCart is not a function","meta":"TypeError: CartService.addToCart is not a function\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:6:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:46:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyStaff (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:38:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"User validation failed: email: Path `email` is required.","meta":"ValidationError: User validation failed: email: Path `email` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"CartService.getAll is not a function","meta":"TypeError: CartService.getAll is not a function\n    at getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:27:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:63:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyManager (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:56:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"cartRepository is not defined","meta":"ReferenceError: cartRepository is not defined\n    at CartService.getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:68:19)\n    at getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:27:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:63:7\n    at verifyToken (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:31:5)\n    at verifyManager (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/auth.verifyToken.js:56:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of null (reading 'length')","meta":"TypeError: Cannot read properties of null (reading 'length')\n    at CartService.getOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:82:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"carts is not defined","meta":"ReferenceError: carts is not defined\n    at CartService.getOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:86:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:280:10)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"UserDto is not defined","meta":"ReferenceError: UserDto is not defined\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:19:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"userDTO is not defined","meta":"ReferenceError: userDTO is not defined\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:9:59)\n    at register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"userDTO is not defined","meta":"ReferenceError: userDTO is not defined\n    at UserService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:9:59)\n    at register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"AdminDto is not defined","meta":"ReferenceError: AdminDto is not defined\n    at AdminService.register (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:18:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async register (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"AdminDto is not defined","meta":"ReferenceError: AdminDto is not defined\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:46:22)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"user is not defined","meta":"ReferenceError: user is not defined\n    at AdminService.login (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:50:34)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async login (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:13:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"admins.map is not a function","meta":"TypeError: admins.map is not a function\n    at UserResponseDTO.fromMany (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/user/user-response.dto.js:49:21)\n    at UserService.updateOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:92:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async updateProfile (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:60:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"UserResponseDTO.fromMany is not a function","meta":"TypeError: UserResponseDTO.fromMany is not a function\n    at UserService.updateOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:92:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async updateProfile (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:60:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AdminRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:15:19)"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AdminRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:15:19)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AdminRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:15:19)"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '654d524e8493d6585dc3ed5f' }\" (type Object) at path \"_id\" for model \"Admin\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AdminRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/admin.repository.js:15:19)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"UserResponseDTO.fromMany is not a function","meta":"TypeError: UserResponseDTO.fromMany is not a function\n    at UserService.getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:73:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:48:31)"}
{"level":"error","message":"UserResponseDTO.fromMany is not a function","meta":"TypeError: UserResponseDTO.fromMany is not a function\n    at UserService.getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/user.Service.js:73:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/user.controller.js:48:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authorize-role.middleware.js:12:14\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authorize-role.middleware.js:12:14\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authorize-role.middleware.js:12:14\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"ProductDto is not defined","meta":"ReferenceError: ProductDto is not defined\n    at ProductService.getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/product.service.js:37:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async getAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/product.controller.js:19:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"ProductDto is not defined","meta":"ReferenceError: ProductDto is not defined\n    at ProductService.createProduct (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/product.service.js:10:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async createProduct (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/product.controller.js:6:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"ProductService.createProduct is not a function","meta":"TypeError: ProductService.createProduct is not a function\n    at createProduct (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/product.controller.js:6:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Id is not defined","meta":"ReferenceError: Id is not defined\n    at #create (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/product.entity.js:113:12)\n    at ProductEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/product.entity.js:91:26)\n    at ProductService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/product.service.js:10:41)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/product.controller.js:11:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"productQuery is not defined","meta":"ReferenceError: productQuery is not defined\n    at ProductService.showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/product.service.js:20:19)\n    at showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/product.controller.js:23:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"a group specification must include an _id","meta":"MongoServerError: a group specification must include an _id\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"eggs.map is not a function","meta":"TypeError: eggs.map is not a function\n    at EggResponseDto.fromMany (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/egg/egg-response.dto.js:77:17)\n    at EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:69:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"datas is not defined","meta":"ReferenceError: datas is not defined\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:64:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"datas is not defined","meta":"ReferenceError: datas is not defined\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:64:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"The field 'totalProduction' must be an accumulator object","meta":"MongoServerError: The field 'totalProduction' must be an accumulator object\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"$totalEggCollection is not defined","meta":"ReferenceError: $totalEggCollection is not defined\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:46:29)\n    at EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:66:44)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authorize-role.middleware.js:12:14\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"_mongodb._tcp.clusteragbe01.7nzef0r.mongodb.net","syscall":"querySrv"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"clusteragbe01.7nzef0r.mongodb.net","syscall":"queryTxt"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"clusteragbe01.7nzef0r.mongodb.net","syscall":"queryTxt"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalCulls')","meta":"TypeError: Cannot read properties of undefined (reading 'totalCulls')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:54:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalEggCollection')","meta":"TypeError: Cannot read properties of undefined (reading 'totalEggCollection')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:55:33)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:54:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"clusteragbe01.7nzef0r.mongodb.net","syscall":"queryTxt"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:54:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalMortality')","meta":"TypeError: Cannot read properties of undefined (reading 'totalMortality')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:54:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"The $subtract accumulator is a unary operator","meta":"MongoServerError: The $subtract accumulator is a unary operator\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at TLSSocket.ondata (node:internal/streams/readable:777:22)\n    at TLSSocket.emit (node:events:517:28)"}
{"level":"error","message":"The $subtract accumulator is a unary operator","meta":"MongoServerError: The $subtract accumulator is a unary operator\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at TLSSocket.ondata (node:internal/streams/readable:777:22)\n    at TLSSocket.emit (node:events:517:28)"}
{"level":"error","message":"The $subtract accumulator is a unary operator","meta":"MongoServerError: The $subtract accumulator is a unary operator\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at TLSSocket.ondata (node:internal/streams/readable:777:22)\n    at TLSSocket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"message":"getaddrinfo ENOTFOUND ac-orijfdx-shard-00-01.7nzef0r.mongodb.net","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":30,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":"atlas-12917n-shard-0","stale":false,"type":"ReplicaSetNoPrimary"}}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"The $subtract accumulator is a unary operator","meta":"MongoServerError: The $subtract accumulator is a unary operator\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at TLSSocket.ondata (node:internal/streams/readable:777:22)\n    at TLSSocket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"_mongodb._tcp.clusteragbe01.7nzef0r.mongodb.net","syscall":"querySrv"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Operation `eggs.aggregate()` buffering timed out after 10000ms","meta":"MongooseError: Operation `eggs.aggregate()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\drivers\\node-mongodb-native\\collection.js:185:23)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"clusteragbe01.7nzef0r.mongodb.net","syscall":"queryTxt"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"error","message":"Failed to connect to MongoDB","meta":{"code":"ETIMEOUT","hostname":"_mongodb._tcp.clusteragbe01.7nzef0r.mongodb.net","syscall":"querySrv"}}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'totalEggCollection')","meta":"TypeError: Cannot read properties of undefined (reading 'totalEggCollection')\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Assignment to constant variable.","meta":"TypeError: Assignment to constant variable.\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Assignment to constant variable.","meta":"TypeError: Assignment to constant variable.\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Assignment to constant variable.","meta":"TypeError: Assignment to constant variable.\n    at EggRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/egg.repository.js:53:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EggService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:67:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Pig validation failed: category: Cast to Number failed for value \"Boar\" (type string) at path \"category\", quantity: Path `quantity` is required.","meta":"ValidationError: Pig validation failed: category: Cast to Number failed for value \"Boar\" (type string) at path \"category\", quantity: Path `quantity` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at model.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at model.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1113:16)\n    at model.Document (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:164:12)\n    at model.Model (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\model.js:123:12)\n    at new model (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\model.js:4689:15)\n    at PigRepository.save (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:5:20)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:11:37)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Pig validation failed: quantity: Path `quantity` is required.","meta":"ValidationError: Pig validation failed: quantity: Path `quantity` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Pig validation failed: quantity: Path `quantity` is required.","meta":"ValidationError: Pig validation failed: quantity: Path `quantity` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Pig validation failed: quantity: Path `quantity` is required.","meta":"ValidationError: Pig validation failed: quantity: Path `quantity` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at PigEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:45:7)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:10:33)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at PigEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:40:5)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:10:33)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Pig validation failed: pen: 2","meta":"ValidationError: Pig validation failed: pen: 2\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Pig validation failed: pen: 2","meta":"ValidationError: Pig validation failed: pen: 2\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Pig validation failed: pen: 2","meta":"ValidationError: Pig validation failed: pen: 2\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Pig validation failed: pen: 2","meta":"ValidationError: Pig validation failed: pen: 2\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Pig validation failed: pen: 2","meta":"ValidationError: Pig validation failed: pen: 2\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"mortality is not defined","meta":"ReferenceError: mortality is not defined\n    at pigQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/pig.filter.js:27:3)\n    at PigService.showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:20:19)\n    at showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:23:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"totalWeight is not defined","meta":"ReferenceError: totalWeight is not defined\n    at PigRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:48:7)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PigService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:68:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"The field 'totalPen1' must specify one accumulator","meta":"MongoServerError: The field 'totalPen1' must specify one accumulator\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"The field 'totalPen1' must be an accumulator object","meta":"MongoServerError: The field 'totalPen1' must be an accumulator object\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'email' of 'undefined' as it is undefined.","meta":"TypeError: Cannot destructure property 'email' of 'undefined' as it is undefined.\n    at CreateUserRequestDTO.from (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/user/create-user-request-dto.js:11:17)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:51:42)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\index.js:346:12)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'map')","meta":"TypeError: Cannot read properties of undefined (reading 'map')\n    at new CreateCartRequestDto (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/cart/create-cart-request.dto.js:17:32)\n    at CreateCartRequestDto.from (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/cart/create-cart-request.dto.js:23:12)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:51:42)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"productId is not defined","meta":"ReferenceError: productId is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:8:59)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"productId is not defined","meta":"ReferenceError: productId is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:8:59)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:22\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:35:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:22\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:35:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:22\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:35:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:37:22\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:20\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:35:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:20\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:35:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:43:32)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"AdminService.changeUserRole is not a function","meta":"TypeError: AdminService.changeUserRole is not a function\n    at changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:50)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async UserRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/user.repository.js:19:18)"}
{"level":"error","message":"A DtoClass is required","meta":"Error: A DtoClass is required\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:28:13)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async UserRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/user.repository.js:19:18)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async UserRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/user.repository.js:19:18)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"","meta":"CastError: Cast to ObjectId failed for value \"{ id: '655891d2da30047881ec0b21' }\" (type Object) at path \"_id\" for model \"User\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:298:34)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOne (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2510:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async UserRepository.findById (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/user.repository.js:19:18)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot access 'userEntity' before initialization","meta":"ReferenceError: Cannot access 'userEntity' before initialization\n    at AdminService.changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:91:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"UserEntity is not defined","meta":"ReferenceError: UserEntity is not defined\n    at AdminService.changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:91:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"UserEntity is not defined","meta":"ReferenceError: UserEntity is not defined\n    at AdminService.changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:91:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"userResponseDTO is not defined","meta":"ReferenceError: userResponseDTO is not defined\n    at AdminService.changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:99:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"userResponseDTO is not defined","meta":"ReferenceError: userResponseDTO is not defined\n    at AdminService.changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/admin.service.js:99:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async changeUserRole (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/admin.controller.js:95:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'equals')","meta":"TypeError: Cannot read properties of undefined (reading 'equals')\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:37:23\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"error","message":"Cannot read properties of undefined (reading 'equals')","meta":"TypeError: Cannot read properties of undefined (reading 'equals')\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:37:23\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:36:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'quantity')","meta":"TypeError: Cannot read properties of undefined (reading 'quantity')\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:8:35)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'productId')","meta":"TypeError: Cannot read properties of undefined (reading 'productId')\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:7:33)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'equals')","meta":"TypeError: Cannot read properties of undefined (reading 'equals')\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:38:23\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:37:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:38:20\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:37:46)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"productId is not defined","meta":"ReferenceError: productId is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:10:59)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"CartEntity.create is not a function","meta":"TypeError: CartEntity.create is not a function\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:9:35)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"CartEntity.cr is not a function","meta":"TypeError: CartEntity.cr is not a function\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:9:35)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot read properties of undefined (reading 'equals')","meta":"TypeError: Cannot read properties of undefined (reading 'equals')\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:42:27\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:41:48)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"item.productId.equals is not a function","meta":"TypeError: item.productId.equals is not a function\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:42:24\n    at Proxy.findIndex (<anonymous>)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:41:48)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at model.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at model.set [as total] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:65:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.","meta":"TypeError: Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:10:13)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"error","message":"Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.","meta":"TypeError: Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:10:13)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.","meta":"TypeError: Cannot destructure property 'productId' of 'cartItems[0]' as it is undefined.\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:10:13)\n    at addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:51:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\", total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"","meta":"ValidationError: Cart validation failed: total: Cast to Number failed for value \"NaN\" (type number) at path \"total\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at model.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at model.set [as total] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:68:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"to is not defined","meta":"ReferenceError: to is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:64:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:53:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:56:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:97:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:97:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:97:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:94:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:83:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:83:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:83:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:81:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:46:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:48:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:48:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:45:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:46:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:46:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:46:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:46:43)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"quantity is not defined","meta":"ReferenceError: quantity is not defined\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:47:48)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:49:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"","meta":"ValidationError: Cart validation failed: cartItems.0.subtotal: Cast to Number failed for value \"NaN\" (type number) at path \"subtotal\"\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at Subdocument.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\types\\subdocument.js:229:12)\n    at EmbeddedDocument.$set (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:1453:12)\n    at EmbeddedDocument.set [as subtotal] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:205:19)\n    at CartService.createCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/cart.service.js:49:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async addToCart (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/cart.controller.js:7:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"date.now is not a function","meta":"TypeError: date.now is not a function\n    at new CreatePoultryRequestDto (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/poultry/create-poultry-request.dto.js:12:22)\n    at CreatePoultryRequestDto.from (file:///C:/Users/Purch/PROJECT/agritally-app/src/dtos/poultry/create-poultry-request.dto.js:26:12)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:51:42)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cast to ObjectId failed for value \"mortality\" (type string) at path \"_id\" for model \"Poultry\"","meta":"CastError: Cast to ObjectId failed for value \"mortality\" (type string) at path \"_id\" for model \"Poultry\"\n    at ObjectId.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schema\\objectid.js:250:11)\n    at SchemaType.applySetters (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1220:12)\n    at SchemaType.castForQuery (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1632:15)\n    at cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\cast.js:356:32)\n    at Query.cast (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4900:12)\n    at Query._castConditions (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:2223:10)\n    at model.Query._findOneAndDelete (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:3491:8)\n    at model.Query.exec (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\query.js:4419:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PoultryRepository.deleteOne (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/poultry.repository.js:46:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"error","message":"Cannot destructure property 'category' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'category' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'status' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'status' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:12)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'year' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'year' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:12)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'year' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'year' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'year' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'year' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Cannot destructure property 'year' of 'filter' as it is undefined.","meta":"TypeError: Cannot destructure property 'year' of 'filter' as it is undefined.\n    at poultryQuery (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/poultry.filter.js:2:11)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:64:19)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"the match filter must be an expression in an object","meta":"MongoServerError: the match filter must be an expression in an object\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"query is not defined","meta":"ReferenceError: query is not defined\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:66:62)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:114:3)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Arguments must be aggregate pipeline operators","meta":"Error: Arguments must be aggregate pipeline operators\n    at Aggregate.append (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\aggregate.js:149:11)\n    at new Aggregate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\aggregate.js:59:17)\n    at Function.aggregate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\model.js:4052:21)\n    at PoultryRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/poultry.repository.js:31:38)\n    at PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:66:48)\n    at statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:52)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Illegal key in $sort specification: _id: \"$category\"","meta":"MongoServerError: Illegal key in $sort specification: _id: \"$category\"\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"undefined is not a function","meta":"TypeError: undefined is not a function\n    at Array.reduce (<anonymous>)\n    at PoultryRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/poultry.repository.js:50:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"undefined is not a function","meta":"TypeError: undefined is not a function\n    at Array.reduce (<anonymous>)\n    at PoultryRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/poultry.repository.js:50:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"price is not defined","meta":"ReferenceError: price is not defined\n    at FishEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/fish.entity.js:75:7)\n    at FishService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/fish.service.js:10:35)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/fish.controller.js:11:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Egg validation failed: user: Path `user` is required.","meta":"ValidationError: Egg validation failed: user: Path `user` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Egg validation failed: user: Path `user` is required.","meta":"ValidationError: Egg validation failed: user: Path `user` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"error","message":"Egg validation failed: user: Path `user` is required.","meta":"ValidationError: Egg validation failed: user: Path `user` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"price is not defined","meta":"ReferenceError: price is not defined\n    at FishEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/fish.entity.js:75:7)\n    at FishService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/fish.service.js:10:35)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/fish.controller.js:11:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"price is not defined","meta":"ReferenceError: price is not defined\n    at FishEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/fish.entity.js:75:7)\n    at FishService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/fish.service.js:10:35)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/fish.controller.js:11:49)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Pig validation failed: user: Path `user` is required.","meta":"ValidationError: Pig validation failed: user: Path `user` is required.\n    at Document.invalidate (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:3162:32)\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\document.js:2955:17\n    at C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongoose\\lib\\schematype.js:1368:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"user is not defined","meta":"ReferenceError: user is not defined\n    at PigEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:23:5)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:10:33)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"user is not defined","meta":"ReferenceError: user is not defined\n    at PigEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:23:5)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:10:33)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"user is not defined","meta":"ReferenceError: user is not defined\n    at new PigEntity (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:8:17)\n    at #create (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:72:12)\n    at PigEntity.make (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/entities/pig.entity.js:52:24)\n    at PigService.create (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:10:33)\n    at create (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:11:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at ValidateRequest.execute (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/validate-request.middleware.js:57:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"totalssMortality is not defined","meta":"ReferenceError: totalssMortality is not defined\n    at PigRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:63:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PigService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"generalMortality is not defined","meta":"ReferenceError: generalMortality is not defined\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:59:7\n    at Array.forEach (<anonymous>)\n    at PigRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:49:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PigService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"totalddMortality is not defined","meta":"ReferenceError: totalddMortality is not defined\n    at PigRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:63:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PigService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"totalMortality is not defined","meta":"ReferenceError: totalMortality is not defined\n    at file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:59:7\n    at Array.forEach (<anonymous>)\n    at PigRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/pig.repository.js:49:16)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PigService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/pig.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/pig.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"Quantity is not defined","meta":"ReferenceError: Quantity is not defined\n    at PoultryRepository.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/data/repository/poultry.repository.js:68:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PoultryService.getStatistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/poultry.service.js:66:24)\n    at async statistics (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/poultry.controller.js:59:31)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"the match filter must be an expression in an object","meta":"MongoServerError: the match filter must be an expression in an object\n    at Connection.onMessage (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:202:26)\n    at MessageStream.<anonymous> (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:61:60)\n    at MessageStream.emit (node:events:517:28)\n    at processIncomingData (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:124:16)\n    at MessageStream._write (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:392:12)\n    at _write (node:internal/streams/writable:333:10)\n    at Writable.write (node:internal/streams/writable:337:10)\n    at Socket.ondata (node:internal/streams/readable:777:22)\n    at Socket.emit (node:events:517:28)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"error","message":"pen is not defined","meta":"ReferenceError: pen is not defined\n    at queryFilter (file:///C:/Users/Purch/PROJECT/agritally-app/src/utils/query.filter.js:13:3)\n    at EggService.showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/services/egg.service.js:20:19)\n    at showAll (file:///C:/Users/Purch/PROJECT/agritally-app/src/controllers/egg.controller.js:23:48)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at auth (file:///C:/Users/Purch/PROJECT/agritally-app/src/middleware/authenticate-user.middles.js:31:5)\n    at newFn (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Purch\\PROJECT\\agritally-app\\node_modules\\express\\lib\\router\\route.js:144:13)"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
{"level":"info","message":"Server is running on port 5000"}
{"level":"info","message":"Connected to MongoDB"}
